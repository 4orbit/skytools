
web:
 - walmgr
 - pgqadm
 - todo


londiste link <qname>
londiste unlink <qname>
londiste add --skip-truncate (needs new field in table_state)

pgqadm reg-copy que cons1 cons2
pgqadm reg-move que cons1 cons2

queue-rename
show-batch-events
del-event

Immidiate
=========

* londiste swithcover support / deny triggers
* deb: /etc/skylog.ini should be conffile
* RemoteConsumer/SerialConsumer/pgq_ext sanity, too much duplication
* londiste * remove tbl should work also if table is already dropped

* backend modules need to be ported to 8.3

Near future
============

* pgqadm: separate priod for retry queue processing
* londiste: create tables on subscriber
* skytools: switch for silence for cron scripts
* docs: londiste, pgq/python, pgq/sql, skytools
* txid: decide on renaming functions
* logtriga: way to switch off logging for some connection
* pgq: separately installable fkeys for all tables for testing
* logdb: hostname
* pgq_ext: solve event tracking
* contrib/*.sql loading from python - need to check db version
* ideas from SlonyI:
  - force timestamps to ISO
  - when buffering queries, check their size
* DBScript: failure to write pidfile should be logged (crontscripts)
* logtriga/textbuf.c should be converted to StringInfo to get rid of
  buffer management code.

Just ideas
===========

* logtriga: use pgq.insert_event_directly?
* pgq/sql: rewrite pgq.insert_event in C or logtriga in plpython?
* skytools: config-less operation?
* skytools: config from database?
* skytools: partial sql parser for log processing
* pgqadm ticker logic into db, to make easier other implementations?

